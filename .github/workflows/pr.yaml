name: Pull Request

on:
  pull_request:
    branches:
    - dev
    types:
    - opened
    # - edited
    # - synchronize

jobs:
  schedule_publish:
    name: Schedule publish

    runs-on: ubuntu-latest

    steps:
    # - name: Check event payload
    #   shell: bash
    #   run: |
    #     echo ${{ toJSON(github.event) }}

    - name: Check pr body
      id: prbody
      shell: bash
      run: |
        echo ::set-output name=value::$(echo ${{ toJSON(github.event.pull_request.body) }})

    - name: Check environment variables
      shell: bash
      run: |
        echo "Published: ${{ steps.prbody.outputs.value }}"

    - name: Extract frontmatter from PR body
      id: frontmatter
      uses: aliencube/frontmatter-to-json-actions@v1
      with:
        markdown: '${{ toJSON(steps.prbody.outputs.value) }}'

    - name: Get publish schedule
      id: schedule
      shell: bash
      run: |
        schedule=$(echo '${{ steps.frontmatter.outputs.jsonised }}' | jq ".schedule" -r | sed 's!\+00\:00!+09:00!g')
        echo ::set-output name=value::$schedule

    # - name: Get owner and repository
    #   uses: jungwinter/split@v1
    #   id: split
    #   with:
    #     msg: ${{ github.event.repository.full_name) }}
    #     separator: '/'

    - name: Schedule publish
      shell: bash
      run: |
        curl -X POST 'https://${{ secrets.AZURE_FUNCTIONS_NAME }}.azurewebsites.net/api/orchestrators/schedule-event' \
            -H "x-functions-key: ${{ secrets.AZURE_FUNCTIONS_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{ "owner": "devkimchi", "repository": "blog", "issueId": ${{ github.event.pull_request.number }}, "schedule": "${{ steps.schedule.outputs.value }}" }} }'
